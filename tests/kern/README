These tests all run the same way:

- Makefile sets up environment and invokes test through ./runtest wrapper.
- ./runtest mounts ./exp.d on ./mnt.d (privately) and runs test script
- output goes to <test>.out
- diod log goes to <test>.diod
- <test>.out is compared wtih <test>.exp 

The tests are:
t12	Create a file and check that file creation mode was honored
t15	Demonstrate that fsync does not return an error.
t17	Set all the mode bits (7777) on a file and directory on server
	and verify that they are reflected in client stat, then do the reverse.
t18	Simple test to check that BSD advisory file locks are properly
	arbitrated between two processes.
t19	Simple test to check that POSIX advisory record locks are properly
	arbitrated between two processes.
t23	Simple test to check that POSIX advisory record locks are handled
	as advertised within one process.
t24	Simple test to check that BSD advisory file locks are handled
	as advertised within one process.
t31	Run fstest with server --no-userdb option (takes a couple minutes)
t34	Run an svnadmin create, which uncovered a bug in fsync
t37	Run fsx.
t38	Run fsstress.
t39	Run fsstress out of 9p, against host fs.
t42	Set/get user.* extended attributes
t44	Test atomic create with O_CREAT|O_EXCL
t46	Set/get trusted.* extended attributes
t47	Set/get security.* extended attributes
t48	Run fsx with mmap read test enabled
t49	Run fsx with mmap write test enabled
