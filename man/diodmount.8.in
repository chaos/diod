.TH mount.diod 8 "@PACKAGE_VERSION@" "@PACKAGE_NAME@" "@PACKAGE_NAME@"
.SH NAME
mount.diod \- mount diod file systems
.SH SYNOPSIS
\fBmount.diod\fR \fI[OPTIONS] host[:aname] dir [-o options]\fR
.SH DESCRIPTION
.B mount.diod
is the mount utility for the distributed I/O daemon, which is an I/O
forwarding service for Linux clusters built upon the Linux \fB9p\fR
file system.
.LP
\fBmount.diod\fR performs two main tasks:
1) connect and authenticate to the \fBdiod\fR server, and
2) issue the \fImount(2)\fR system call with appropriate mount options.
.LP
Authentication with the \fBdiod\fR server takes place in user space.
The connected (and authenticated) file descriptor is passed as a mount
option to the kernel \fB9p\fR file system
.LP
This command requires root to execute the \fImount(2)\fR system call.
.LP
The \fB9p\fR file system must support the 9P2000.L protocol variant,
e.g. kernel 2.6.38 or above.
.LP
The \fIhost\fR portion of the mount spec may optionally be supplied in
hostlist format, e.g. host1,host2,host3:aname or host[1-3]:aname, in which
case hosts are tried in order until a successful connection is obtained.
Post-connect mount errors are immediately fatal.
.LP
If the \fIhost\fR portion of the mount spec begins with a forward-slash (/),
it refers to the path to a UNIX domain socket.
.LP
IPv6 addresses may be used for the \fIhost\fR portion of the mount spec if they
are enclosed in square brackets.
.SH COMMAND LINE OPTIONS
.TP
.I "-f, --fake-mount"
Do everything except the mount system call.
.TP
.I "-n, --no-mtab"
Do not update the system mtab.
.TP
.I "-v, --verbose"
Set verbose mode.
.TP
.I "-o, --options opt[,opt,...]"
Set mount options (see below).
.TP
.I "-p, --privport"
Connect from a socket bound to a port in the range of 512-1023,
available to root only.  This can be used in conjunction with the
\fIprivport\fR export option.
.SH MOUNT OPTIONS
The following file system specific mount options are handled by
\fBmount.diod\fR.
.TP
.I "aname=name"
The aname is the path of the exported file system on the server.
It can be specified in the mount spec in \fIhost:aname\fR format
like NFS, or it can be specified with this option.
\fBdiod\fR will not allow an attach to an empty aname.
\fBdiod\fR has a built-in synthetic control file system that can be
mounted with aname of \fIctl\fR.
Note that "ctl" must be explicitly exported.
.TP
.I "uname=name"
The user name to authenticate to the \fBdiod\fR server.
The default is \fIuname=root\fR.
.TP
.I "access=mode"
Select the access mode.
\fIaccess=user\fR (default) causes the mount to support multiple users,
and requires root authentication.
\fIaccess=<uid>\fR restricts access at the client to only the
specified user.
.TP
.I "port=n"
Connect to the \fIdiod\fR server on the specified port.
The default is the IANA-assigned 9pfs port 564.
.TP
.I "trans=name"
Select a transport.
\fBmount.diod\fR only supports \fItrans=fd\fR
because of its strategy for authentication.
.TP
.I "rfdno=n,wfdno=n"
The file descriptor for reading and writing with \fItrans=fd\fR.
If set, \fBmount.diod\fR assumes this file descriptor is already
connected to a \fBdiod\fR server and ignores \fIhost\fR in the
device specification, and the \fIport=n\fR option.
.TP
.I "msize=n"
The msize is the max 9P packet payload size.
The default is 65512 (65536-24)
.TP
.I "version=name"
Select 9P protocol version.
\fBdiod\fR only supports \fI9p2000.L\fR.
.TP
.I "cache=mode"
Specify a caching policy.  By default, no caches are used.
If \fIcache=loose\fR, no attempts are made at consistency.
This mode is intended for exclusive, read-only mounts.
If \fIcache=fscache\fR, use FS-Cache for a persistent, read-only
cache backend.
.TP
.I "cachetag"
In the context of \fIcache=fscache\fR, select the cache tag
to use for this session.
Cache tags for existing cache sessions are listed in /sys/fs/9p/caches.
.TP
.I "nodevmap"
Do not map special files.  Represent them as normal files.
This can be used to share devices/named pipes/sockets between
hosts.
.TP
.I "debug=n"
Specifies debug level for the kernel 9p module.  The debug level is a bitmask.
.br
0x01  = display verbose error messages
.br
0x02  = developer debug (DEBUG_CURRENT)
.br
0x04  = display 9p trace
.br
0x08  = display VFS trace
.br
0x10  = display Marshalling debug
.br
0x20  = display RPC debug
.br
0x40  = display transport debug
.br
0x80  = display allocation debug
.br
0x100 = display protocol message debug
.br
0x200 = display Fid debug
.br
0x400 = display packet debug
.br
0x800 = display fscache tracing debug
.br
The debug level is global, i.e. it applies to all 9P file systems and
it remains set after the file system is unmounted.
The default is \fIdebug=0\fR.
.SH "SEE ALSO"
diod (8)
